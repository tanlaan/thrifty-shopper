<%# barcode scanner include %>
<script src="https://cdn.jsdelivr.net/npm/quagga@0.12.1/dist/quagga.min.js" integrity="sha256-JDVyLQRqvRSTL/6WaPud93JXpfEdW11zwjqhoNgkGXc=" crossorigin="anonymous"></script>

<div class="hero">
  <div class="hero-body has-text-centered">
    <h1 class="title">What's The Market&nbsp;Price?</h1>

    <%= form_with url: search_path, name: 'search_form', class: 'field is-grouped' do |f| %>
      <%= f.search_field :query, { placeholder: 'UPC/PLU/Name', class: 'input is-medium m-2' }%>
      <%= f.submit 'Search', class: 'button is-link is-medium m-2' %>
    <% end %>

  </div>
</div>
<section>
  <div class="buttons is-centered">
    <button id='scan' class="js-modal-trigger button is-primary is-centered 
      is-large is-hidden-desktop is-hidden-widescreen" data-target="scanner">Scan UPC</button>
  </div>
</section>
<div id="scanner" class="modal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Scan UPC</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <div id="interactive" class="viewport">
      <video class="videoCamera" autoplay="true" preload="auto" src="" muted="true"
             playsinline="true"></video>
      <canvas style="display:none"class="drawingBuffer"></canvas>
      </div>
    </section>
  </div>
</div>

<script>
var btn = document.getElementById("scan")
btn.addEventListener('click', barcodeStartScan)
function throttle(callback, limit) {
  var waiting = false;
  return function () {
    if (!waiting) {
      callback.apply(this, arguments)
      waiting = true
      setTimeout(function () {
        waiting = false;
      }, limit);
    }
  }
}
function loadProductPage(result){
  console.log(result.codeResult.code)
  qry = document.getElementById('query')
  qry.value = result.codeResult.code
  
  frm = document.getElementsByTagName('form')[0]
  frm.submit()
  
}
function barcodeStartScan(){ 
  Quagga.init(
    {
      inputStream: {
        type: "LiveStream",
        constraints: {
          width: 600,
          height: 400,
          facingMode: "environment" // or user
        }
      },
      locator: {
        patchSize: "medium",
        halfSample: true,
        debug:false
      },
      numOfWorkers: 4,
      decoder: {
        readers: ["upc_reader"]
      },
      locate: true
    },
    function (err) {
      if (err) {
        return console.log(err);
      }
      console.log('Quagga start')
      Quagga.start();
    }
  );
  console.log('load ondetected?')
  Quagga.onDetected(throttle(loadProductPage, 250));
};

document.addEventListener('DOMContentLoaded', () => {
  // Functions to open and close a modal
  function openModal($el) {
    $el.classList.add('is-active');
  }

  function closeModal($el) {
    $el.classList.remove('is-active');
    Quagga.stop();
  }

  function closeAllModals() {
    (document.querySelectorAll('.modal') || []).forEach(($modal) => {
      closeModal($modal);
    });
  }

  // Add a click event on buttons to open a specific modal
  (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
    const modal = $trigger.dataset.target;
    const $target = document.getElementById(modal);
    console.log($target);

    $trigger.addEventListener('click', () => {
      openModal($target);
    });
  });

  // Add a click event on various child elements to close the parent modal
  (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
    const $target = $close.closest('.modal');

    $close.addEventListener('click', () => {
      closeModal($target);
    });
  });

  // Add a keyboard event to close all modals
  document.addEventListener('keydown', (event) => {
    const e = event || window.event;

    if (e.keyCode === 27) { // Escape key
      closeAllModals();
    }
  });
});

</script>
